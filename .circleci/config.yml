version: 2.1
jobs:
  test-x86:
    docker:
      - image: cimg/rust:1.61.0
    resource_class: small
    steps:
      - checkout
      - run:
          name: Setup
          command: |
            rustup target add i686-unknown-linux-gnu
            sudo apt update
            sudo apt install gcc-multilib -y
            sudo apt install build-essential -y
      - restore_cache:
          keys:
            - build-cache-{{ arch }}-{{ .Branch }}-{{ checksum "Cargo.toml" }}
            - build-cache-{{ arch }}-{{ .Branch }}
      - run:
          name: Testing x86_64
          command: |
            cargo test --target x86_64-unknown-linux-gnu  -- --nocapture
      - run:
          name: Testing x86
          command: |
            cargo test --target i686-unknown-linux-gnu  -- --nocapture
      - save_cache:
          key: build-cache-{{ arch }}-{{ .Branch }}-{{ checksum "Cargo.toml" }}
          paths:
            - ~/.cargo
            - ./target

  test-arm:
    machine:
      image: ubuntu-2004:2022.04.1
    resource_class: arm.medium
    steps:
      - checkout
      - run:
          name: Setup
          command: |
            curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
            source $HOME/.cargo/env
            rustup toolchain install nightly
      - restore_cache:
          keys:
            - build-cache-{{ arch }}-{{ .Branch }}-{{ checksum "Cargo.toml" }}
            - build-cache-{{ arch }}-{{ .Branch }}
      - run:
          name: Testing aarch64
          command: |
            cargo test -- --nocapture
      - run:
          name: Testing aarch64-nightly
          command: |
            cargo +nightly test --features all -- --nocapture
      - save_cache:
          key: build-cache-{{ arch }}-{{ .Branch }}-{{ checksum "Cargo.toml" }}
          paths:
            - ~/.cargo
            - ./target

workflows:
  test:
    jobs:
      - test-x86
      - test-arm